package com.bachk.ssys.fcl.service;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.springframework.flex.remoting.RemotingDestination;
import org.springframework.flex.remoting.RemotingInclude;
import org.springframework.stereotype.Service;



import com.bachk.ssys.fcl.model.SMSModel;
import com.bachk.ssys.fcl.model.SelectItem;
@Service
@RemotingDestination
public class SelectNetwork {
	
	private String opentPath;
	private String outPath;
	private 	BufferedReader in;
	private  BufferedWriter bw;
	 BufferedDataInputer bdi;

	private Map options;
	@RemotingInclude
	public void init(Map newoptions,String path,String output)
	{
		
		this.options = newoptions;
		this.opentPath = path;
		this.outPath = output;
		
	}
	
	public void openoutFile(){
		
		
			
		try{
			File files = new File(outPath);  
			if (!files.exists() != false) {  
	            try {  
	            	files.createNewFile();  
	                  
	            } catch (IOException e) {  
	                e.printStackTrace();  
	            }  
			}
			
			bw = new BufferedWriter(new FileWriter(files));  
		} catch (IOException e) {  
            e.printStackTrace();  
        }  
			
	          
		
	}
	
	public void openinFile(){
		
		
		try{
	    FileReader file = new FileReader(opentPath);
			//FileReader file = new FileReader(opentPath);
		    in = new BufferedReader(file);
		    bdi = new BufferedDataInputer(10, in);
		
		}    catch (IOException e) {  
				e.printStackTrace();  
		}    
	
}

	@RemotingInclude
	public List<SMSModel> SelectNetwork1(){
		
	
		this.openoutFile();
		this.openinFile();
	    SMSModel data;
        ArrayList<SMSModel> list = new ArrayList<SMSModel>();

	    SelectItem newSelect = new SelectItem((String)options.get("property"),(String)options.get("value"));
	        try {  
	        	int newvar =1;
	     
	        	while (((data = (SMSModel) bdi.readNextData()) != null) ) {
	        	
	        		if( newSelect.selectItem(data,(String)options.get("operater")) == true ){
	        			list.add(data);
	        				bw.write(data.toString());
	        				bw.newLine();//»»ÐÐ  
	        				bw.flush();  
	        		}
   		    }
         
     
	        } catch (Exception e) {  
	        	e.printStackTrace();  
	        }
  
		

	return list;

    }
}
